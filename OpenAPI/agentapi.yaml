swagger: '2.0'
info:
  version: 1.0.0
  title: PS3838 API - Agent API Reference
  description:  |
    
    # Authentication 
    
    The API uses HTTP Basic access authentication. Always use HTTPS to access the API.
    
    You need to send HTTP Request header like this:    
    
    `Authorization: Basic <Base64 value of UTF-8 encoded "username:password">`
    
    Example:
    
    `Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=`
    
    # Data Formats 
    
    PS3838 API supports only JSON format. HTTP header Accept must be set:
    
    `Accept: application/json`
    
    POST HTTP Request must have JSON body content and Content-Type HTTP header must be set:
    
    `Content-Type: application/json`
    
    # Date Time Format
    
    All dates and times are in GMT time zone, ISO 8601 format
    
    # API Path
    
    To access the API, the user must use the correct path.
    
    The root path for the API is:
    
    api.{domain-name}.com/partner
    
    The remainder of the URI is comprised of the version of the endpoint (e.g. v1) and the endpoint itself.
    
    Example URI: api.{domain-name}.com/partner/v1/balance

  x-logo:
    url: ''
host: api.{domain-name}.com
schemes:
  - https
security:
  - basicAuth: []
paths:
  /partner/v1/balance:
    get:
      tags:
        - Balance
      summary: Get Balance â€“ v1
      description: Gets the account balance for the account(s) requested.
      operationId: Balance_V1_Get
      consumes: []
      produces:
        - application/json
      parameters:
        - name: level
          in: query
          description: The level for which to get the data. Value must be one of the value [PART, CORP, SMA, MA, AG, PL].
          required: false
          type: string
          enum:
            - PART
            - CORP
            - SMA
            - MA
            - AG
            - PL
        - name: direct
          in: query
          description: Whether to limit to direct downline accounts (including member accounts). Default value if not passed = false.
          required: false
          type: boolean
        - name: username
          in: query
          description: The username of the account for which to return data.
          required: false
          type: string
        - name: pageSize
          in: query
          description: Page size in case. Max is 1000.
          required: false
          type: integer
          default: 1000
        - name: fromRecord
          in: query
          description: 'Starting record (inclusive) of the result. To fetch next page set it to toRecord+1 '
          required: false
          type: integer
          default: 0  
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LineResponse'
        '400':
          description: BadRequest
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: InternalServerError
          schema:
            $ref: '#/definitions/ExtendedErrorResponse'
      deprecated: true  
definitions:
  ErrorResponse:
    type: object
    properties:
      code:
        type: string
        description: Identifier representing the type of error that occurred.
      message:
        type: string
        description: Description of the error.
    description: Contains details of an error that was encountered.
  ExtendedErrorResponse:
    type: object
    properties:
      ref:
        type: string
      code:
        type: string
      message:
        type: string
  LineResponse:
    type: object
    properties:
      status:
        type: string
        description: If the value is NOT_EXISTS, than this will be the only parameter in the response. All other params would be empty. [SUCCESS = OK, NOT_EXISTS = Line not offered anymore]
        enum:
          - SUCCESS
          - NOT_EXISTS
      price:
        type: number
        format: double
        description: Latest price.
      lineId:
        type: integer
        format: int64
        description: Line identification needed to place a bet.
      altLineId:
        type: integer
        format: int64
        description: This would be needed to place the bet if the handicap is on alternate line, otherwise it will not be populated in the response.
      team1Score:
        type: integer
        format: int32
        description: Away team score. Applicable to soccer only.
      team2Score:
        type: integer
        format: int32
        description: Home team score. Applicable to soccer only.
      team1RedCards:
        type: integer
        format: int32
        description: Team 1 red cards. Applicable to soccer only.
      team2RedCards:
        type: integer
        format: int32
        description: Team 2 red cards. Applicable to soccer only.
      maxRiskStake:
        type: number
        format: double
        description: Maximum bettable risk amount.
      minRiskStake:
        type: number
        format: double
        description: Minimum bettable risk amount.
      maxWinStake:
        type: number
        format: double
        description: Maximum bettable win amount.
      minWinStake:
        type: number
        format: double
        description: Minimum bettable win amount.
      effectiveAsOf:
        type: string
        description: Line is effective as of this date and time in UTC.
